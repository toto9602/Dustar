version: "3.8"

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile #해당 부분의 Dockerfile로 이미지 build
    ports:
      - "19000:19000" #컨테이너에 노출된 포트와 호스트 컴퓨터의 포트를 연결
      - "19001:19001"
      - "19002:19002"
      - "19003:19003"
      - "19004:19004"
      - "19005:19005"
      - "19006:19006"
    volumes: #변경사항을 docker image에 실시간 반영하게 해 준다?
      - ./frontend/:/frontend
      - ./frontend/node_modules:/frontend/node_modules
    command: > # 셀에서 커멘드 실행
      start
    environment: #환경 변수 지정
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - EXPO_DEVTOOLS_LISTEN_PORT=19002
      - REACT_NATIVE_PACKAGER_HOSTNAME=192.168.0.18
      - EXPO_DEBUG=true
    stdin_open: true #docker run -i
    tty: true #셀 실행이 끝나도 컨테이너가 죽지 않게끔. docker run -t

  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    tty: true
    volumes:
      - ./backend:/backend
      - ./backend/account:/backend/account
      - ./backend/challenges:/backend/challenges
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=Dustar
      - DB_USER=postgres
      - DB_PASS=star
    depends_on:
      - db

  db:
    image: postgres:9.6.24
    environment:
      - POSTGRES_DB=Dustar
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=star


#Dockerfile은 도커 이미지를 만듦.
#가져올 거면, 굳이? 